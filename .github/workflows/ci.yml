name: build

on: [push, pull_request]

jobs:
  clippy:
    # Runs Clippy to check for lints in the Rust code
    name: Clippy Lint Check
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: |
          rustup default stable
          rustup component add clippy

      - name: Run Clippy
        run: cargo clippy -- -D warnings

  doc:
    # Builds project documentation, including private items
    name: Docs Check
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check docs
        run: cargo doc --no-deps --document-private-items

  cli-build:
    # Builds the CLI binary located in the `cli` folder using release profile
    name: Build CLI
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup default stable

      - name: Build CLI release
        run: |
          cd cli
          cargo build --release

  build:
    # Builds selected examples and uploads the compiled executables as artifacts
    name: Build Examples
    runs-on: windows-latest

    strategy:
      matrix:
        example: [writeline, powershell]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup default stable

      - name: Build example ${{ matrix.example }}
        run: cargo build --release --example ${{ matrix.example }}

      - name: Upload ${{ matrix.example }}.exe
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.example }}.exe
          path: target/release/examples/${{ matrix.example }}.exe
